{"version":3,"file":"static/js/809.135f7717.chunk.js","mappings":"0HAMA,IAJc,WACZ,OAAO,eAAIA,UAAU,sBAAqB,SAAC,mBAC7C,C,wMCqEA,EA9DsB,WACpB,OAA0CC,EAAAA,EAAAA,UAAS,IAAG,eAA/CC,EAAa,KAAEC,EAAgB,KAChCC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAA7CH,QAEFI,EAAW,yCAAG,WAAOC,GAAC,4EAEG,OAFH,SAExBP,GAASQ,EAAAA,EAAAA,KAAW,IAAO,UACRC,EAAAA,EAAAA,GAAU,8BAA8B,KAAD,EAApDC,EAAI,OACVV,GAASQ,EAAAA,EAAAA,KAAW,IACpBT,EAAiBW,GAAM,yGAE1B,gBAPgB,sCAajB,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACF,GAAG,KAGD,iCACE,SAACM,EAAA,EAAM,IACNV,GACC,SAACW,EAAA,EAAO,KAER,qBAASjB,UAAU,0BAAyB,WAC1C,eAAIA,UAAU,eAAc,SAAC,uBAE5BE,EAAcgB,OAAS,GACtB,gBAAKlB,UAAU,gBAAe,UAC5B,8BACE,4BACE,2BACE,wBAAI,UACJ,wBAAI,aACJ,wBAAI,UACJ,wBAAI,eAGR,2BACgB,OAAbE,QAAa,IAAbA,OAAa,EAAbA,EAAeiB,KAAI,SAACC,EAAKC,GACxB,OACE,2BACE,wBAAKA,EAAI,KACT,wBAAQ,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,WACV,wBAAQ,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,UAAUC,MAAM,KAAK,MAC/B,wBAAQ,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKG,UAAUC,MAAM,KAAK,GAAGA,MAAM,KAAK,OAJnC,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,IAOlB,YAKN,SAACC,EAAA,EAAK,QAIZ,SAACC,EAAA,EAAM,MAGb,C","sources":["components/Empty.jsx","pages/Notifications.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Empty = () => {\r\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\r\n};\r\n\r\nexport default Empty;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../styles/notification.css\";\r\nimport Empty from \"../components/Empty\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport Loading from \"../components/Loading\";\r\nimport \"../styles/user.css\";\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n\r\n  const getAllNotif = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/notification/getallnotifs`);\r\n      dispatch(setLoading(false));\r\n      setNotifications(temp);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllNotif();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"container notif-section\">\r\n          <h2 className=\"page-heading\">Your Notifications</h2>\r\n\r\n          {notifications.length > 0 ? (\r\n            <div className=\"notifications\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Content</th>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {notifications?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>{ele?.content}</td>\r\n                        <td>{ele?.updatedAt.split(\"T\")[0]}</td>\r\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"names":["className","useState","notifications","setNotifications","dispatch","useDispatch","loading","useSelector","state","root","getAllNotif","e","setLoading","fetchData","temp","useEffect","Navbar","Loading","length","map","ele","i","content","updatedAt","split","_id","Empty","Footer"],"sourceRoot":""}