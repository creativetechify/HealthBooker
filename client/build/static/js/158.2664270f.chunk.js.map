{"version":3,"file":"static/js/158.2664270f.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/BookAppointment.jsx","components/DoctorCard.jsx","pages/Doctors.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Empty = () => {\r\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\r\n};\r\n\r\nexport default Empty;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/bookappointment.css\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { CardElement } from \"react-stripe-elements\";\r\n\r\nconst BookAppointment = ({ setModalOpen, ele }) => {\r\n  const [formDetails, setFormDetails] = useState({\r\n    date: \"\",\r\n    time: \"\",\r\n  });\r\n\r\n  const inputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    return setFormDetails({\r\n      ...formDetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const bookAppointment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await toast.promise(\r\n        axios.post(\r\n          \"/appointment/bookappointment\",\r\n          {\r\n            doctorId: ele?.userId?._id,\r\n            date: formDetails.date,\r\n            time: formDetails.time,\r\n            doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          success: \"Appointment booked successfully\",\r\n          error: \"Unable to book appointment\",\r\n          loading: \"Booking appointment...\",\r\n        }\r\n      );\r\n      setModalOpen(false);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  const bookAppointmenttest = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Step 1: Create a Payment Intent on the server\r\n      const paymentResponse = await axios.post(\r\n        \"/payment/create-payment\",\r\n        {\r\n          amount: 200000, // The amount in cents (e.g., 2000 for â‚¹20)\r\n          currency: \"inr\", // The currency\r\n          // Additional payment details if needed\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      // Step 2: If the payment intent is created successfully, proceed to book the appointment\r\n      if (paymentResponse.data.success) {\r\n        const { data } = await toast.promise(\r\n          axios.post(\r\n            \"/appointment/bookappointment\",\r\n            {\r\n              doctorId: ele?.userId?._id,\r\n              date: formDetails.date,\r\n              time: formDetails.time,\r\n              doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\r\n              paymentIntentId: paymentResponse.data.paymentIntent.id, // Pass the payment intent ID to link the payment with the appointment\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          ),\r\n          {\r\n            success: \"Appointment booked successfully\",\r\n            error: \"Unable to book appointment\",\r\n            loading: \"Booking appointment...\",\r\n          }\r\n        );\r\n\r\n        // Step 3: If the appointment is booked successfully, close the modal\r\n        if (data.success) {\r\n          setModalOpen(false);\r\n        } else {\r\n          // Handle appointment booking errors here\r\n          // You might want to consider rolling back the payment in case of booking failure\r\n        }\r\n      } else {\r\n        // Handle payment creation errors here\r\n      }\r\n    } catch (error) {\r\n      // Handle general errors here\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal flex-center\">\r\n        <div className=\"modal__content\">\r\n          <h2 className=\"page-heading\">Book Appointment</h2>\r\n          <IoMdClose\r\n            onClick={() => {\r\n              setModalOpen(false);\r\n            }}\r\n            className=\"close-btn\"\r\n          />\r\n          <div className=\"register-container flex-center book\">\r\n            <form className=\"register-form\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"date\"\r\n                className=\"form-input\"\r\n                value={formDetails.date}\r\n                onChange={inputChange}\r\n              />\r\n              <input\r\n                type=\"time\"\r\n                name=\"time\"\r\n                className=\"form-input\"\r\n                value={formDetails.time}\r\n                onChange={inputChange}\r\n              />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn form-btn\"\r\n                onClick={bookAppointment}\r\n              >\r\n                book\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn form-btn\"\r\n                onClick={bookAppointment}\r\n              >\r\n                Pay Now\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;\r\n","import \"../styles/doctorcard.css\";\r\nimport React, { useState } from \"react\";\r\nimport BookAppointment from \"../components/BookAppointment\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst DoctorCard = ({ ele }) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n\r\n  const handleModal = () => {\r\n    if (token == \"\") {\r\n      return toast.error(\"You must log in first\");\r\n    }\r\n    setModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className={`card`}>\r\n      <div className={`card-img flex-center`}>\r\n        <img\r\n          src={\r\n            ele?.userId?.pic ||\r\n            \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n          }\r\n          alt=\"profile\"\r\n        />\r\n      </div>\r\n      <h3 className=\"card-name\">\r\n        Mr. {ele?.userId?.firstname + \" \" + ele?.userId?.lastname}\r\n      </h3>\r\n      <p className=\"certification\">\r\n        <strong>Certification: </strong>\r\n        {ele?.certification}\r\n      </p>\r\n      <p className=\"specialization\">\r\n        <strong>Specialization: </strong>\r\n        {ele?.specialization}\r\n      </p>\r\n      <p className=\"experience\">\r\n        <strong>Experience: </strong>\r\n        {ele?.experience}yrs\r\n      </p>\r\n      <p className=\"phone\">\r\n        <strong>Phone: </strong>\r\n        {ele?.userId?.mobile}\r\n      </p>\r\n      <p className=\"fees\">\r\n        <strong>Fees per consultation: </strong>â‚¹ {ele?.fees}\r\n      </p>\r\n      <p className=\"timing1\">\r\n        <strong>Session Duration: </strong>\r\n        {ele?.timing1}\r\n      </p>\r\n\r\n      <button className=\"btn appointment-btn\" onClick={handleModal}>\r\n        Book Appointment\r\n      </button>\r\n      {modalOpen && <BookAppointment setModalOpen={setModalOpen} ele={ele} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DoctorCard from \"../components/DoctorCard\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport \"../styles/doctors.css\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport Loading from \"../components/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport Empty from \"../components/Empty\";\r\n\r\nconst Doctors = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n\r\n  const fetchAllDocs = async () => {\r\n    dispatch(setLoading(true));\r\n    const data = await fetchData(`/doctor/getalldoctors`);\r\n    setDoctors(data);\r\n    dispatch(setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllDocs();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading && <Loading />}\r\n      {!loading && (\r\n        <section className=\"container doctors\">\r\n          <h3 className=\"page-heading\">CST Expert</h3>\r\n          {doctors.length > 0 ? (\r\n            <div className=\"doctors-card-container\">\r\n              {doctors.map((ele) => {\r\n                return <DoctorCard ele={ele} key={ele._id} />;\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Doctors;\r\n"],"names":["className","setModalOpen","ele","useState","date","time","formDetails","setFormDetails","inputChange","e","target","name","value","bookAppointment","preventDefault","toast","axios","doctorId","userId","_id","doctorname","firstname","lastname","headers","Authorization","localStorage","getItem","success","error","loading","data","onClick","type","onChange","modalOpen","token","src","pic","alt","certification","specialization","experience","mobile","fees","timing1","doctors","setDoctors","dispatch","useDispatch","useSelector","state","root","fetchAllDocs","setLoading","fetchData","useEffect","Navbar","Loading","length","map","Empty","Footer"],"sourceRoot":""}