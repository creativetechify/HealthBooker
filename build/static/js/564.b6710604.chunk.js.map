{"version":3,"file":"static/js/564.b6710604.chunk.js","mappings":"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","sources":["components/Empty.jsx","pages/Appointments.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Empty = () => {\r\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\r\n};\r\n\r\nexport default Empty;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Empty from \"../components/Empty\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport Loading from \"../components/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport \"../styles/user.css\";\r\n\r\nconst Appointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n  const { userId } = jwt_decode(localStorage.getItem(\"token\"));\r\n\r\n  const getAllAppoint = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(\r\n        `/appointment/getallappointments?search=${userId}`\r\n      );\r\n      setAppointments(temp);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllAppoint();\r\n  }, []);\r\n\r\n  const complete = async (ele) => {\r\n    try {\r\n      const { data } = await toast.promise(\r\n        axios.put(\r\n          \"/appointment/completed\",\r\n          {\r\n            appointid: ele?._id,\r\n            doctorId: ele?.doctorId?._id,\r\n            doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          success: \"Appointment booked successfully\",\r\n          error: \"Unable to book appointment\",\r\n          loading: \"Booking appointment...\",\r\n        }\r\n      );\r\n\r\n      getAllAppoint();\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"container notif-section\">\r\n          <h2 className=\"page-heading\">Your Appointments</h2>\r\n\r\n          {appointments.length > 0 ? (\r\n            <div className=\"appointments\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Doctor</th>\r\n                    <th>Patient</th>\r\n                    <th>Appointment Date</th>\r\n                    <th>Appointment Time</th>\r\n                    <th>Booking Date</th>\r\n                    <th>Booking Time</th>\r\n                    <th>Status</th>\r\n                    {userId === appointments[0].doctorId?._id ? (\r\n                      <th>Action</th>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {appointments?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          {ele?.doctorId?.firstname +\r\n                            \" \" +\r\n                            ele?.doctorId?.lastname}\r\n                        </td>\r\n                        <td>\r\n                          {ele?.userId?.firstname + \" \" + ele?.userId?.lastname}\r\n                        </td>\r\n                        <td>{ele?.date}</td>\r\n                        <td>{ele?.time}</td>\r\n                        <td>{ele?.createdAt.split(\"T\")[0]}</td>\r\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\r\n                        <td>{ele?.status}</td>\r\n                        {userId === ele?.doctorId?._id ? (\r\n                          <td>\r\n                            <button\r\n                              className={`btn user-btn accept-btn ${\r\n                                ele?.status === \"Completed\" ? \"disable-btn\" : \"\"\r\n                              }`}\r\n                              disabled={ele?.status === \"Completed\"}\r\n                              onClick={() => complete(ele)}\r\n                            >\r\n                              Complete\r\n                            </button>\r\n                          </td>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default Appointments;\r\n"],"names":["className","useState","appointments","setAppointments","dispatch","useDispatch","loading","useSelector","state","root","userId","jwt_decode","localStorage","getItem","getAllAppoint","e","setLoading","fetchData","temp","useEffect","complete","ele","toast","axios","appointid","_id","doctorId","doctorname","firstname","lastname","headers","Authorization","success","error","data","length","map","i","date","time","createdAt","split","updatedAt","status","disabled","onClick"],"sourceRoot":""}